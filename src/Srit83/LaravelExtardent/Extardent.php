<?php
/**
 * @created 20.02.14 - 21:09
 * @author stefanriedel
 */

namespace Srit83\LaravelExtardent;

use Closure;
use \LaravelBook\Ardent\Ardent;

class Extardent extends Ardent
{

    public function save(array $rules = array(),
                         array $customMessages = array(),
                         array $options = array(),
                         Closure $beforeSave = null,
                         Closure $afterSave = null
    )
    {
        $this->clearTaggedCaches();
        return parent::save($rules, $customMessages, $options, $beforeSave, $afterSave); // TODO: Change the autogenerated stub
    }

    public function delete()
    {
        $this->clearTaggedCaches();
        return parent::delete(); // TODO: Change the autogenerated stub
    }

    public function clearTaggedCaches()
    {
        if (\Config::get('cache.driver') == 'memcached') {
            $aTags = array(get_called_class());
            if ($mxId = $this->getAttribute($this->primaryKey)) {
                $aTags[] = $mxId;
            }
            \Cache::tags($aTags)->flush();
        }
    }

    public function newQuery($excludeDeleted = true)
    {

        $builder = new Builder($this->newBaseQueryBuilder());
        $builder->throwOnFind = static::$throwOnFind;

        // Once we have the query builders, we will set the model instances so the
        // builder can easily access any information it may need from the model
        // while it is constructing and executing various queries against it.
        $builder->setModel($this)->with($this->with);

        if ($excludeDeleted and $this->softDelete)
        {
            $builder->whereNull($this->getQualifiedDeletedAtColumn());
        }

        return $builder;

    }

    protected function newBaseQueryBuilder()
    {
        /**
         * override this
         */
        $conn = $this->getConnection();

        $grammar = $conn->getQueryGrammar();

        $oQB = new QueryBuilder($conn, $grammar, $conn->getPostProcessor());
        $oQB->setModel($this);
        return $oQB;

        //return parent::newBaseQueryBuilder(); // TODO: Change the autogenerated stub
    }


} 